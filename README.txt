백준 알고리즘 1654 문제 풀이 중입니다.

문제 풀이를 완료했습니다.

해당 문제는 이분 탐색 알고리즘을 통해 풀이했습니다.

먼저 입력된 값을 정렬한 다음, 1(입력할 수 있는 가장 작은 값)과 입력된 최대 값으로 이분 탐색을 시작합니다.

이분 탐색 과정에서 공통 길이로 나눌 수 있는 선의 개수를 파악해 개수가 정해진 개수보다 작으면 왼쪽을 이동,

개수보다 클 경우 오른쪽을 이동하는 방식으로 진행합니다.

여기서 오른쪽으로 이동할 경우는 구한 선의 개수가 정해진 개수보다 많을 경우인데, 여기서 이미 정해진 개수를 채우는 것을

만족했기 때문에, 이 상황에서 가장 큰 값을 구할 수 있도록 조건을 걸어 최대 선 길이를 파악할 수 있도록 구현합니다.

이 문제에서 주의해야 할 점은 입력 값인데

입력값의 최대는 2^31-1로 int 자료형의 최대값입니다.

이 입력값을 가지고 이분 탐색 알고리즘을 사용할 시, 중간 값을 계산하는 과정에서 int 자료형 범위를 벗어날 수 있으므로

왼족, 오른족, 중앙 변수는 long long으로 설정해 줍니다.

또한 명시적 형변환을 사용할 시, 2초를 초과할 수 있기 때문에 주의해야 합니다.

예의 소스 코드 부분)

	int left = 1, right = input_max;

	unsigned long long mid, max = 0;
	
	while(left <= right){
	
		c = 0;
		
		mid ((unsigned long long)left +(unsigned long long)right)/2; -> 문제의 부분
