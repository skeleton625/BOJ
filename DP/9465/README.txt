백준 알고리즘 9465 문제 풀이 중입니다.

문제 풀이를 완료했습니다.

해당 코드는 다이나믹 프로그래밍과 캐시를 사용해 문제를 풀이했습니다.

문제에서 스티커를 땔 때, 때는 스티커를 기준으로 상, 하, 좌, 우에 있는 스티커는 사용할 수 없게 됩니다.

이 상황에서 땐 스티커의 점수 총 합이 최대가 되는 경우를 파악해야 합니다.

이 경우에서 생각해 보았을 때, 2 행의 스티커 묶음에서 가장 많이 스티커를 고를 수 있는 경우는 선택한 스티커에 대각선에

위치해 있는 스티커를 계속해서 선택하는 것입니다.

이렇게 선택을 하게 될 경우, 최대값이 될 수 있는 값은 총 2개가 나오게 되고 여기서 스티커의 최대값을 구해줄 수 있습니다.

하지만 이렇게 구해준 최대값은 스티커의 최대값이 아닐 수도 있습니다.

예를 들어 문제에서 준 첫 번째 예시를 볼 경우 대각선으로만 선택해 최대값을 구하게 되면 스티커의 최대 값은 250이 됩니다.

하지만 정답은 260이라는 것을 알 수 있습니다.

여기서 생각해보면 스티커를 선택할 때 상, 하, 좌, 우의 스티커만 사용하지 못하게 되는 것이므로 대각선 스티커가 아닌

대각선 스티커 옆에 있는 스티커를 선택할 수도 있다는 것을 알 수 있습니다.

즉, 점화식은 다음과 같습니다.

ans[0][i] = mat[0][i] + MAX(ans[1][i-1], ans[1][i-2])

ans[1][i] = mat[1][i] + MAX(ans[0][i-1], ans[1][i-2])

그러므로 2행의 시작 스티커[0][0], [1][0]에서 시작해 대각선, 또는 대각선 옆에 있는 스티커를 골랐을 때의 최대값을 계산해

캐시에 저장한 다음, 다음 스티커에 대한 최대값을 계산할 때 저장한 캐시를 사용해 전체 스티커의 최대 값을 구해주도록 합니다.
